name: CD Pipeline
on:
  push:
    branches:
      - develop
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Set environment based on branch
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Set environment variables based on branch
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "CONFIG_ENV=PROD" >> $GITHUB_ENV
            echo "RENDER_SERVICE_ID=${{ secrets.RENDER_PROD_SERVICE_ID }}" >> $GITHUB_ENV
          else
            echo "CONFIG_ENV=DEV" >> $GITHUB_ENV
            echo "RENDER_SERVICE_ID=${{ secrets.RENDER_DEV_SERVICE_ID }}" >> $GITHUB_ENV
          fi

      - name: Prepare Configuration
        run: |
          if [ "${CONFIG_ENV}" = "DEV" ]; then
            cp src/main/resources/configmaps/configmap-dev.properties src/main/resources/application.properties
          else
            cp src/main/resources/configmaps/configmap-prod.properties src/main/resources/application.properties
          fi

      - name: Inject Environment Secrets into Configuration
        run: |
          sed -i "s|\${SUPABASE_USERNAME}|${{ secrets.SUPABASE_USERNAME }}|g" src/main/resources/application.properties
          sed -i "s|\${SUPABASE_PASSWORD}|${{ secrets.SUPABASE_PASSWORD }}|g" src/main/resources/application.properties
          sed -i "s|\${JWT_SECRET}|${{ secrets.JWT_SECRET }}|g" src/main/resources/application.properties
          sed -i "s|\${SUPABASE_DB_URL}|${{ secrets.SUPABASE_DB_URL }}|g" src/main/resources/application.properties

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/resonate:${{ github.sha }}-${{ env.CONFIG_ENV }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/resonate:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/resonate:buildcache,mode=max

      - name: Deploy to Render
        run: |
          curl -X POST ${{ secrets.RENDER_API_URL }}/${{ env.RENDER_SERVICE_ID }}/deploys \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "imageTag": "${{ github.sha }}-${{ env.CONFIG_ENV }}"
            }'