name: CI Pipeline
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
env:
  CONFIG_ENV: DEV
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
    
      - name: Prepare Configuration
        run: |
          if [ "${CONFIG_ENV}" = "DEV" ]; then
            cp src/main/resources/configmaps/configmap-dev.properties src/main/resources/application.properties
          else
            cp src/main/resources/configmaps/configmap-prod.properties src/main/resources/application.properties
          fi
      
      - name: Inject Secrets into Configuration
        run: |
          sed -i "s|\${SUPABASE_USERNAME}|${{ secrets.SUPABASE_USERNAME }}|g" src/main/resources/application.properties
          sed -i "s|\${SUPABASE_PASSWORD}|${{ secrets.SUPABASE_PASSWORD }}|g" src/main/resources/application.properties
          sed -i "s|\${JWT_SECRET}|${{ secrets.JWT_SECRET }}|g" src/main/resources/application.properties
          sed -i "s|\${SUPABASE_DB_URL}|${{ secrets.SUPABASE_DB_URL }}|g" src/main/resources/application.properties
      
      - name: Build and Test with Maven
        run: |
          mvn clean verify
      
      - name: Generate Code Coverage Report
        run: mvn jacoco:report
      
      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      
      - name: Run Vulnerability Analysis
        run: mvn dependency-check:check
      
      - name: Package Application
        run: |
          mvn package -Dquarkus.profile=dev
      
      - name: Build Docker Image
        run: docker build -t resonate:${{ github.run_number }} .
      
      - name: Login to Docker Registry
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin ${{ secrets.DOCKER_REGISTRY }}
      
      - name: Tag and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.run_number }}
          docker tag resonate:${IMAGE_TAG} ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/resonate:${IMAGE_TAG}
          docker push ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/resonate:${IMAGE_TAG}
    
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: core-runner-jar
          path: target/core-runner.jar
