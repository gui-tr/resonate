name: CI/CD Pipeline
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  CONFIG_ENV: ${{ github.ref == 'refs/heads/main' && 'PROD' || 'DEV' }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      # First inject secrets into main application.properties
      - name: Inject Secrets into Main Configuration
        run: |
          sed -i "s|\${SUPABASE_USERNAME}|${{ secrets.SUPABASE_USERNAME }}|g" src/main/resources/application.properties
          sed -i "s|\${SUPABASE_PASSWORD}|${{ secrets.SUPABASE_PASSWORD }}|g" src/main/resources/application.properties
          sed -i "s|\${JWT_SECRET}|${{ secrets.JWT_SECRET }}|g" src/main/resources/application.properties
          sed -i "s|\${SUPABASE_DB_URL}|${{ secrets.SUPABASE_DB_URL }}|g" src/main/resources/application.properties
          sed -i "s|\${SUPABASE_URL}|${{ secrets.SUPABASE_URL }}|g" src/main/resources/application.properties
          sed -i "s|\${SUPABASE_API_KEY}|${{ secrets.SUPABASE_API_KEY }}|g" src/main/resources/application.properties
          sed -i "s|\${BACKBLAZE_KEY_ID}|${{ secrets.BACKBLAZE_KEY_ID }}|g" src/main/resources/application.properties
          sed -i "s|\${BACKBLAZE_APPLICATION_KEY}|${{ secrets.BACKBLAZE_APPLICATION_KEY }}|g" src/main/resources/application.properties
          sed -i "s|\${BACKBLAZE_BUCKET_NAME}|${{ secrets.BACKBLAZE_BUCKET_NAME }}|g" src/main/resources/application.properties

      # Then handle environment-specific configurations
      - name: Prepare Environment Configuration
        run: |
          if [ "${CONFIG_ENV}" = "DEV" ]; then
            # For development, copy and process the dev configmap
            cp src/main/resources/configmaps/configmap-dev.properties src/main/resources/application-dev.properties
            sed -i "s|\${SONAR_HOST_URL}|${{ secrets.SONAR_HOST_URL }}|g" src/main/resources/application-dev.properties
            sed -i "s|\${SONAR_TOKEN}|${{ secrets.SONAR_TOKEN }}|g" src/main/resources/application-dev.properties
          else
            # For production, copy the prod configmap
            cp src/main/resources/configmaps/configmap-prod.properties src/main/resources/application-prod.properties
          fi

      # Run Sonar analysis only on develop branch
      - name: Run SonarCloud Analysis
        if: github.ref == 'refs/heads/develop'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}

      # Build the application
      - name: Build with Maven
        run: |
          if [ "${CONFIG_ENV}" = "DEV" ]; then
            mvn clean package -Dquarkus.profile=dev
          else
            mvn clean package -Dquarkus.profile=prod
          fi

      # Deploy to Heroku
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "."
          procfile: "Procfile" 